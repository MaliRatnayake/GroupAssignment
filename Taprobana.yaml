AWSTemplateFormatVersion: '2010-09-09'

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: ecom-prod-vpc

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: ecom-prod-public-subnet-1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: ecom-prod-public-subnet-2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: ecom-prod-private-subnet-1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: ecom-prod-private-subnet-2

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ecom-prod-igw

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # NAT Gateway for PublicSubnet1
  ElasticIPForNAT1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPForNAT1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: ecom-prod-nat-gateway-1

  # NAT Gateway for PublicSubnet2
  ElasticIPForNAT2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPForNAT2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: ecom-prod-nat-gateway-2

  # Route Table for PrivateSubnet1 to use NAT Gateway 1
  RouteTablePrivateWithNAT1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ecom-prod-private-route-table-with-nat-1

  RoutePrivateSubnet1ToNAT:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivateWithNAT1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1

  RouteTableAssociationPrivateWithNAT1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref RouteTablePrivateWithNAT1

  # Route Table for PrivateSubnet2 to use NAT Gateway 2
  RouteTablePrivateWithNAT2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ecom-prod-private-route-table-with-nat-2

  RoutePrivateSubnet2ToNAT:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivateWithNAT2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway2

  RouteTableAssociationPrivateWithNAT2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref RouteTablePrivateWithNAT2

  # ALB (Application Load Balancer)
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: ecom-prod-alb
      Subnets:
        - Ref: PublicSubnet1
        - Ref: PublicSubnet2
      SecurityGroups:
        - Ref: ALBSecurityGroup
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Scheme: internet-facing
      Tags:
        - Key: Name
          Value: ecom-prod-alb

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow HTTP and HTTPS traffic"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0

  # SNS Topic for CloudWatch Alarm Actions
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "CloudWatch Alarm Notifications"
      Subscription:
        - Protocol: email
          Endpoint: "22ug2-0190M@sltc.edu.lk"  # Replace with your email address

  # CloudWatch Alarm for ALB Requests
  CloudWatchAlarmALBRequests:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "Triggers when ALB request count exceeds 100,000 within 5 minutes"
      Namespace: AWS/ApplicationELB
      MetricName: RequestCount
      Dimensions:
        - Name: LoadBalancer
          Value: !Sub "app/${ALB.LoadBalancerFullName}"
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 100000
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref SNSTopic
      OKActions:
        - !Ref SNSTopic

Outputs:
  ALBURL:
    Description: Application Load Balancer URL
    Value: !GetAtt ALB.DNSName
  EC2Instance1Id:
    Description: "Instance ID of EC2 Instance in Private Subnet 1"
    Value: !Ref EC2Instance1
  EC2Instance2Id:
    Description: "Instance ID of EC2 Instance in Private Subnet 2"
    Value: !Ref EC2Instance2
